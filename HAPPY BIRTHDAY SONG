/*
  Happy Birthday Song - Arduino Buzzer
*/

#define NOTE_C4  262
#define NOTE_D4  294
#define NOTE_E4  330
#define NOTE_F4  349
#define NOTE_G4  392
#define NOTE_A4  440
#define NOTE_B4  494
#define NOTE_C5  523
#define REST 0
#define BUZZER 21
#define BUTTON 35

int tempo = 120;
int buzzer = BUZZER;

int melody[] = {
  NOTE_C4, 4, NOTE_C4, 8, NOTE_D4, 4, NOTE_C4, 4, NOTE_F4, 4, NOTE_E4, 2,
  NOTE_C4, 4, NOTE_C4, 8, NOTE_D4, 4, NOTE_C4, 4, NOTE_G4, 4, NOTE_F4, 2,
  NOTE_C4, 4, NOTE_C4, 8, NOTE_C5, 4, NOTE_A4, 4, NOTE_F4, 4, NOTE_E4, 4, NOTE_D4, 2,
  NOTE_A4, 4, NOTE_A4, 8, NOTE_A4, 4, NOTE_F4, 4, NOTE_G4, 4, NOTE_F4, 2,
};

int notes = sizeof(melody) / sizeof(melody[0]) / 2;
int wholenote = (60000 * 4) / tempo;
volatile int tempoLevels[] = {60, 90, 120, 150, 180};
volatile int tempoIndex = 2;

void changeTempo() {
  tempoIndex = (tempoIndex + 1) % 5;
}

void setup() {
  pinMode(BUTTON, INPUT_PULLUP);
  attachInterrupt(digitalPinToInterrupt(BUTTON), changeTempo, FALLING);
}

void playMelody() {
  int tempo = tempoLevels[tempoIndex];
  int wholenote = (60000 * 4) / tempo;

  for (int thisNote = 0; thisNote < notes * 2; thisNote += 2) {
    int divider = melody[thisNote + 1];
    int noteDuration = (divider > 0) ? (wholenote / divider) : (wholenote / abs(divider)) * 1.5;
    if (melody[thisNote] != REST) {
      tone(BUZZER, melody[thisNote], noteDuration * 0.9);
    }
    delay(noteDuration);
    noTone(BUZZER);
  }
}

void loop() {
  playMelody();
}
